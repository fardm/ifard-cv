---
import { basics, info, social, languages } from "@cv";
import Section from "@/components/Section.astro";
import LinkedIn from "@/icons/LinkedIn.astro";
import XIcon from "@/icons/X.astro";
import GitHub from "@/icons/GitHub.astro";
import Instagram from "@/icons/Instagram.astro";
import Telegram from "@/icons/Telegram.astro";
const { name, label, image } = basics;
const { email, phone, site, birthday, location, soldeirs } = info;
// const printInfo = "";
const iconMap = {
    linkedin: LinkedIn,
    x: XIcon,
    github: GitHub,
    instagram: Instagram,
    telegram: Telegram,
} as const;
---

<Section>
	<div class="flex flex-col-reverse gap-8">
		<div class="info">
			<h1>{name}</h1>
			<h2>{label}</h2>
		</div>
		<figure class="print:hidden w-fit relative">
			<img class="shadow-lg shadow-skin-hues aspect-square w-32 rounded-2xl bg-cover" src={image} alt={name} />
			<div class="pointer-events-none absolute -inset-2">
				<div class="absolute -inset-y-8 right-0 w-px bg-skin-hue/50 [mask-image:linear-gradient(to_top,transparent,white_4rem,white_calc(100%-4rem),transparent)]"></div>
				<div class="absolute -inset-y-8 left-0 w-px bg-skin-hue/50 [mask-image:linear-gradient(to_top,transparent,white_4rem,white_calc(100%-4rem),transparent)]"></div>
				<div class="absolute -inset-x-8 bottom-0 h-px bg-skin-hue/50 [mask-image:linear-gradient(to_left,transparent,white_4rem,white_calc(100%-4rem),transparent)]"></div>
				<div class="absolute -inset-x-8 top-0 h-px bg-skin-hue/50 [mask-image:linear-gradient(to_left,transparent,white_4rem,white_calc(100%-4rem),transparent)]"></div>
			</div>
		</figure>
	</div>
</Section>

<!-- custom object -->

<!-- info -->
<hr class="border border-solid border-[1px] border-skin-muted/40 dark:border-white/10 w-2/3">
<section class="grid gap-4">

	<!-- email -->
	{email && (
		<div class="flex items-center gap-2">
			<div class="ml-1 bg-skin-muted/20 dark:bg-white/10 rounded-full">
				<svg xmlns="http://www.w3.org/2000/svg" class="md:inline-block self-center p-3 text-skin-muted dark:text-white/80 h-11 w-11" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-mail-icon lucide-mail"><path d="m22 7-8.991 5.727a2 2 0 0 1-2.009 0L2 7"/><rect x="2" y="4" width="20" height="16" rx="2"/></svg>
			</div>
			<div class="grid relative w-full items-baseline justify-between gap-1">
				<h4 class="items-baseline gap-x-2 gap-y-0.5 text-skin-muted font-normal">ایمیل</h4>
				<div class="text-base text-skin">{email}</div>
			</div>
		</div>
	)}

	<!-- phone -->
	{phone && (
		<div class="flex items-center gap-2">
			<div class="ml-1 bg-skin-muted/20 dark:bg-white/10 rounded-full">
				<svg xmlns="http://www.w3.org/2000/svg" class="md:inline-block self-center p-3 text-skin-muted dark:text-white/80 h-11 w-11" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-phone-call-icon lucide-phone-call"><path d="M13 2a9 9 0 0 1 9 9"/><path d="M13 6a5 5 0 0 1 5 5"/><path d="M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384"/></svg>
			</div>
			<div class="grid relative w-full items-baseline justify-between gap-1">
				<h4 class="items-baseline gap-x-2 gap-y-0.5 text-skin-muted font-normal">شماره تماس</h4>
				<div class="text-base text-skin">{phone}</div>
			</div>
		</div>
	)}

	<!-- site -->
	{site && (
		<div class="flex items-center gap-2">
			<div class="ml-1 bg-skin-muted/20 dark:bg-white/10 rounded-full">
				<svg xmlns="http://www.w3.org/2000/svg" class="md:inline-block self-center p-3 text-skin-muted dark:text-white/80 h-11 w-11" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-link-icon lucide-link"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"/><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"/></svg>
			</div>
			<div class="grid relative w-full items-baseline justify-between gap-1">
				<h4 class="items-baseline gap-x-2 gap-y-0.5 text-skin-muted font-normal">وبلاگ</h4>
				<div class="text-base text-skin">{site}</div>
			</div>
		</div>
	)}

	<!-- birthday -->
	{birthday && (
		<div class="flex items-center gap-2">
			<div class="ml-1 bg-skin-muted/20 dark:bg-white/10 rounded-full">
				<svg xmlns="http://www.w3.org/2000/svg" class="md:inline-block self-center p-3 text-skin-muted dark:text-white/80 h-11 w-11" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-cake-icon lucide-cake"><path d="M20 21v-8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8"/><path d="M4 16s.5-1 2-1 2.5 2 4 2 2.5-2 4-2 2.5 2 4 2 2-1 2-1"/><path d="M2 21h20"/><path d="M7 8v3"/><path d="M12 8v3"/><path d="M17 8v3"/><path d="M7 4h.01"/><path d="M12 4h.01"/><path d="M17 4h.01"/></svg>
			</div>
			<div class="grid relative w-full items-baseline justify-between gap-1">
				<h4 class="items-baseline gap-x-2 gap-y-0.5 text-skin-muted font-normal">متولد</h4>
				<div class="text-base text-skin">{birthday}</div>
			</div>
		</div>
	)}

	<!-- location -->
	{location && (
		<div class="flex items-center gap-2">
			<div class="ml-1 bg-skin-muted/20 dark:bg-white/10 rounded-full">
				<svg xmlns="http://www.w3.org/2000/svg" class="md:inline-block self-center p-3 text-skin-muted dark:text-white/80 h-11 w-11" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-map-pin-icon lucide-map-pin"><path d="M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"/><circle cx="12" cy="10" r="3"/></svg>
			</div>
			<div class="grid relative w-full items-baseline justify-between gap-1">
				<h4 class="items-baseline gap-x-2 gap-y-0.5 text-skin-muted font-normal">محل سکونت</h4>
				<div class="text-base text-skin">{location}</div>
			</div>
		</div>
	)}

	<!-- soldeir -->
	{soldeirs && (
		<div class="flex items-center gap-2">
			<div class="ml-1 bg-skin-muted/20 dark:bg-white/10 rounded-full">
				<svg xmlns="http://www.w3.org/2000/svg" class="md:inline-block self-center p-3 text-skin-muted dark:text-white/80 h-11 w-11" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-hard-hat-icon lucide-hard-hat"><path d="M10 10V5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v5"/><path d="M14 6a6 6 0 0 1 6 6v3"/><path d="M4 15v-3a6 6 0 0 1 6-6"/><rect x="2" y="15" width="20" height="4" rx="1"/></svg>
			</div>
			<div class="grid relative w-full items-baseline justify-between gap-1">
				<h4 class="items-baseline gap-x-2 gap-y-0.5 text-skin-muted font-normal">سربازی</h4>
				<div class="text-base text-skin">{soldeirs}</div>
			</div>
		</div>
	)}
	
</section>

<!-- social -->
<hr class="border border-solid border-[1px] border-skin-muted/40 dark:border-white/10 w-2/3">
<section class="grid gap-4">

    {social.map(({ network, username, url }) => {
        const Icon = iconMap[(network || "").toLowerCase() as keyof typeof iconMap];
        return (
            <div class="flex items-center gap-2">
                <div class="ml-1 bg-skin-muted/20 dark:bg-white/10 rounded-full social-icon">
                    {Icon && <Icon />}
                </div>
                <div class="grid relative w-full items-baseline justify-between gap-1">
                    <h4 class="items-baseline gap-x-2 gap-y-0.5 text-skin-muted font-normal">{network}</h4>
                    <a target="_blank" class="text-base text-skin hover:text-skin-hue decoration-dotted underline-offset-[5px] hover:underline" href={url}>{username}</a>
                </div>
            </div>
        );
    })}
	
</section>

<!-- language -->
<hr class="border border-solid border-[1px] border-skin-muted/40 dark:border-white/10 w-2/3">
<section class="grid gap-4">

	{languages.map(({ language, flag, level }) => (
		<div class="flex items-center gap-2">
			<div class="w-11 ml-1">
				<img class="md:inline-block self-center rounded-md" src={flag} alt={language} />
			</div>
			<div class="grid relative w-full items-baseline justify-between gap-1">
				<h4 class="items-baseline gap-x-2 gap-y-0.5 text-skin-muted font-normal">{language}</h4>
				<div class="text-base text-skin">{level}</div>
			</div>
		</div>
	))}

</section>
<br>


<style>

	.info {
		@apply flex flex-col gap-1 pr-0 print:gap-0 print:pr-0;
	}

	h1 {
		@apply text-2xl font-extrabold print:text-3xl;
	}

	h2 {
		@apply text-balance text-xl font-medium text-skin-hue print:text-lg;
	}



	span {
		@apply flex items-center gap-1 text-xs text-skin-hue ;
	}

	footer {
		@apply mt-2 flex gap-1 text-sm ;
	}

	footer a, footer button {
		@apply inline-flex size-8 items-center justify-center rounded-md p-1 transition-all duration-500 ease-linear text-skin-hue hover:bg-skin-button-accent hover:text-skin-inverted;
	}

	/* Scope social icon style to this file only; target child SVGs via :global */
	.social-icon :global(svg) {
		@apply md:inline-block self-center p-3 text-skin-muted dark:text-white/80 h-11 w-11;
	}

	@media (width <= 700px) {
		.container {
			flex-direction: column-reverse;
		}

		.info {
			@apply md:items-center md:justify-center pr-0 ;
		}

		figure {
			@apply flex md:items-center md:justify-center;
		}

		h2 {
			text-wrap: balance;
		}

		figure {
			@apply md:mx-auto;
		}
	}
</style>

<script>
    // @ts-nocheck
    const select = document.getElementById("themeSwitch");
    const theme = localStorage.getItem("theme");
    const systemTheme = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";

    if (theme !== null && select instanceof HTMLSelectElement) {
        select.value = theme;
    } else if (select instanceof HTMLSelectElement) {
        select.value = systemTheme;
    }

    /** @type {(value: string) => void} */
    const updateTheme = (value) => {
        const resolved = value === "system" ? systemTheme : value;
        document.documentElement.classList.remove("light", "dark");
        document.documentElement.classList.add(resolved);
        localStorage.setItem("theme", value);
    };

    if (select instanceof HTMLSelectElement) updateTheme(select.value);

    if (select instanceof HTMLSelectElement) {
        select.addEventListener("change", (event) => {
            const target = event.target;
            if (!(target instanceof HTMLSelectElement)) return;
            updateTheme(target.value);
        });
    }

	// Disable dark mode before printing
	window.addEventListener("beforeprint", () => {
		document.documentElement.classList.remove("dark");
	});

	// Restore dark mode after printing
    window.addEventListener("afterprint", () => {
        if (!(select instanceof HTMLSelectElement)) return;
        if (select.value === "dark" || (select.value === "system" && systemTheme === "dark")) {
            document.documentElement.classList.add("dark");
        }
    });
</script>
